{
  "swagger": "2.0",
  "info": {
    "description": "Api Documentation",
    "version": "1.0",
    "title": "Api Documentation",
    "termsOfService": "urn:tos",
    "contact": {

    },
    "license": {
      "name": "Apache 2.0",
      "url": "http://www.apache.org/licenses/LICENSE-2.0"
    }
  },
  "host": "localhost:8080",
  "basePath": "/",
  "tags": [
    {
      "name": "user-controller",
      "description": "User Controller"
    }
  ],
  "paths": {
    "/users": {
      "get": {
        "tags": [
          "user-controller"
        ],
        "summary": "find all users",
        "operationId": "findAllUsingGET",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "page",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "size",
            "in": "query",
            "description": "size",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "x-country",
            "in": "header",
            "description": "x-country",
            "required": true,
            "type": "string",
            "x-example": "CL"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/PaginatedResponseDto«UserDto»"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "post": {
        "tags": [
          "user-controller"
        ],
        "summary": "Create an user",
        "description": "the email is unique",
        "operationId": "createUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "userRequest",
            "description": "userRequest",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UserRequest"
            }
          },
          {
            "name": "x-country",
            "in": "header",
            "description": "x-country",
            "required": true,
            "type": "string",
            "x-example": "CL"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/UserDto"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "409": {
            "description": "Conflict"
          }
        }
      },
      "put": {
        "tags": [
          "user-controller"
        ],
        "summary": "update an user",
        "operationId": "updateUserUsingPUT",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "userRequest",
            "description": "userRequest",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UserRequest"
            }
          },
          {
            "name": "x-country",
            "in": "header",
            "description": "x-country",
            "required": true,
            "type": "string",
            "x-example": "CL"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/UserDto"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/users/{email}": {
      "get": {
        "tags": [
          "user-controller"
        ],
        "summary": "find an user by email",
        "operationId": "findByEmailUsingGET",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "email",
            "in": "path",
            "description": "email",
            "required": true,
            "type": "string"
          },
          {
            "name": "x-country",
            "in": "header",
            "description": "x-country",
            "required": true,
            "type": "string",
            "x-example": "CL"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/UserDto"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "delete": {
        "tags": [
          "user-controller"
        ],
        "summary": "delete a user",
        "operationId": "deleteUserByEmailUsingDELETE",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "email",
            "in": "path",
            "description": "email",
            "required": true,
            "type": "string"
          },
          {
            "name": "x-country",
            "in": "header",
            "description": "x-country",
            "required": true,
            "type": "string",
            "x-example": "CL"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    }
  },
  "definitions": {
    "MatrixIdentityDto": {
      "type": "object",
      "properties": {
        "age": {
          "type": "integer",
          "format": "int32",
          "example": 31
        },
        "firstName": {
          "type": "string",
          "example": "Thomas"
        },
        "lastName": {
          "type": "string",
          "example": "Anderson"
        },
        "nick": {
          "type": "string",
          "example": "Neo"
        },
        "phone": {
          "type": "string",
          "example": "278-52-94"
        }
      },
      "title": "MatrixIdentityDto"
    },
    "PaginatedResponseDto«UserDto»": {
      "type": "object",
      "properties": {
        "data": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/UserDto"
          }
        },
        "page": {
          "type": "integer",
          "format": "int32"
        },
        "perPage": {
          "type": "integer",
          "format": "int32"
        },
        "total": {
          "type": "integer",
          "format": "int64"
        },
        "totalPages": {
          "type": "integer",
          "format": "int32"
        }
      },
      "title": "PaginatedResponseDto«UserDto»"
    },
    "UserDto": {
      "type": "object",
      "properties": {
        "age": {
          "type": "integer",
          "format": "int32",
          "example": 37
        },
        "email": {
          "type": "string",
          "example": "neo@matrix.com"
        },
        "firstName": {
          "type": "string",
          "example": "Thomas"
        },
        "lastName": {
          "type": "string",
          "example": "Anderson"
        },
        "matrixIdentity": {
          "$ref": "#/definitions/MatrixIdentityDto"
        },
        "tokenMatrix": {
          "type": "string",
          "example": "d41d8cd98f00b204e9800998ecf8427e"
        }
      },
      "title": "UserDto"
    },
    "UserRequest": {
      "type": "object",
      "properties": {
        "age": {
          "type": "integer",
          "format": "int32",
          "example": 37
        },
        "email": {
          "type": "string",
          "example": "neo@matrix.com"
        },
        "firstName": {
          "type": "string",
          "example": "Thomas"
        },
        "lastName": {
          "type": "string",
          "example": "Anderson"
        }
      },
      "title": "UserRequest"
    }
  }
}